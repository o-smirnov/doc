file: ../PSS/MQT.12oct2005


      ==============================================================
      Input for MeqTree (MQT) meeting,  wednesday 12 oct 2005, 15:30  
      ==============================================================

Participants:
  - RXA:  Rob Assendorp
  - GVD:  Ger van Diepen
  - MXM:  Maaijke Mevius
  - RJN:  Ronald Nijboer 
  - JEN:  Jan Noordam
  - TAO:  Tom Oosterloo
  - OMS:  Oleg Smirnov
  - AGW:  Tony Willis
  - SBY:  Sarod Yatawatta
  - SvdT: Bas van der Tol

For information:
  - MAB:  Michiel Brentjens
  - WNB:  Wim Brouw
  - AGB:  Ger de Bruyn
  - MvH:  Michiel van Haarlem
  - HAH:  Hanno Holties
  - PXK:  Paul Kemper
  - JXR:  John Romein
  - KvdS: Kjeld van der Schaaf



           Meeting schedule
	   ================

Wednesday 15:30, Multi-Media Room.

Please prepare by reading this thoroughly.



           ================
           Topics this week
	   ================


 - CDR: The latest (16 Nov?)

   - We must convince beforehand

   - Operational: WSRT cps (calibrator reduction)

     - Bugzilla entries have been assigned to the WSRT_cps milestone

   - Demonstrated: 3c343 and beyond

     - pointing drifts (AGB)

     - slightly extended source?

     - LSM with extended sources (SBY/RJN)

   - WHAT (SBY/JEN)

   - Active: the elite inner circle


 - WSRT preparations for MeqTree (RXA)

   - system and machines

   - stream control


 - Solver convergence

   - spid problem solved (OMS)? 

   - Using reqseqs to synchronise ifr-trees


 - MeqDataCollect (AGW)

   - Flagger 

     - when blinking, change the color range... 

     - ignore flags when calculating color range

   - Visualising spectra: what is what (i.e. which ifr?)

     - When combining corrs, strange things happen....

     - axis labelling (1D, 2D)  


 - MeqHistoryCollect nodes (AGW)

   - urgent (strong selling point for operational system)

   - status (use in MG_JEN_spigot2sink.py) 

   - related topic: flag report


 - uvbricks (RJN)

   - status

   - test


 - LSM 

   - save/load

   - MG_JEN_lsm_attach.py

   - extended sources


 - WHAT (Sarod will demo)

   - Stand-alone

   - Combined with WSRT








       =================
       Processing speed:
       =================

After accuracy, speed is the strongest seller! Conversely, if MeqTrees
are percieved to be slow, nobody will even look at all the wonders we
have to offer. We now have a system in which things work pretty
nicely, but I only want to offer it for serious use after a first
round of removing bottlenecks. Fortunately, there is a lot we can do:

   - Profiler (OMS): very useful!
  
   - Tree optimalisation (strippers, means)

   - Use last solution as starting point for the next

     - Can get away with many fewer iterations (1)

     - Built into MeqParm (MXM)

     - More MeqParm intelligence?

   - Tiled solutions:

     - Requires inversion of block-diagonal matrix (MAB)

     - More solver intelligence (policy-free, of course)

   - Re-sampling (especially in freq direction): (SBY)

     - NB: selfcal has (many) derivatives, so minimise nr of cells
           subtract has no derivatives, so predict at full resolution?

     - special case first, general later

     - links with uvbrick and patch composer

   - NB: When comparing with other packages:

     - MeqTree can do the entire frequ band, provided we put in the
       correct instrumental/source model (SI, 17 MHz, etc) 

     - Others can do one freq channel at a time (not entirely true?)

   - Use optimised build (factor of 2?)

   - The new machines (already present)

   - Parallelisation (OMS, january)

   - Tool for mass-disabling of groups of nodes (?)

     - For instance visualisation

   - More localised intelligence (so that the optimal solution is
   reached more quickly, without all kinds of user interaction)

     - Flagging (at various levels)

     - Ignoring ifrs whose condeq results are too wild?

     - Dynamic ignoring of smaller derivatives                <---------
       NB: This appears to be one of the major bottlenecks

     - Etc

   - NB: What can we visualise in order to create a strong impression
     of speed?






     ================================================================
     Towards operational use of MeqTrees in WSRT calibrator reduction. 
     ================================================================

This is an important element of the process to get our stuff
excersized, understood and coveted. 

   -) We need a MINIMUM basic but useful book-keeping system around
   the use of Meqtrees for reduction 'projects' (see below). It should
   allow the independent use of MeqTrees, but also have an interface
   that allows embedding into overall observatory systems.

   -) JEN has made available a set of TDL scripts for WSRT calibrator
   reduction trees. More are easily produced (and edited!).

   -) Proto-LSM with WSRT calibrator sources 
 
   -) System temperature. Getting info from MS

   -) Bandpass. Caused some trouble before...

   -) Flagging.... 
   
   -) Memory nodes needed (OMS)
 
   -) Speed....

   -) The group in Westerbork will take steps to make sure that
   MeqTrees can run there (AIPS++ version etc). In the mean-time, they
   can be used in Dwingeloo.






       ===========================
       MG script management (SvdT)
       ===========================

 - Testing environment

   - Demo of MG_JEN_testall.py

   - Towards a TDL_testall.py script that calls all MG_XYZ_testall.py

     - (may not be necessary)

   - What should we do with the result?

   - Standalone use of the kernel (i.e. without browser)


 - MG script overview (BvdT)

   - demo of his beginning of a website

   - JEN email 25 sept

   - rules for machine-readable MG script information 
     (keywords, detailed description, etc)








                    =====================================
                    =====================================






















