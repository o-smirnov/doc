file: AGW.24jan2005: visualisation rules.

To: Tony.Willis@nrc-cnrc.gc.ca (Tony Willis),
    smirnov@astron.nl (Oleg Smirnov)
Subject: plot-attributes etc
X-Mailer: VM 6.75 under Emacs 20.3.1
Bcc: noordam@nfra.nl
--text follows this line--

Tony, Oleg,

Here is the summary of what we discussed this morning. 

      ------------------------------------
      General
      ------------------------------------

The defrec of a dataCollect node has a field 'visu', which is a record
with the following fields

# visu.top_label := 'visu'
# visu.value := can be anything, including a nested record
# visu.label := vector of child-names (unless specified otherwise)
# visu.attrib

# visu.attrib.plot := [type='...', other fields specific to plot.type]
# visu.attrib.color := 'blue' (default)  need list of allowed colors
#          what if not present? automatic succession of colors?

# Tags are string vectors, e.g:
# visu.attrib.tag := "XX mean";
# visu.attrib.tag := "XX stddev";
# Tags are accumulated while going downstream


      -------------------------
      default attrib.plot.type
      -------------------------

At this moment: If no attrib.plot.type specified, the default is
'standalone'. This is a realvsimag, with attrib.plot.circles=F

Alternatively, the system could react to the vells dimensionality

   - 0D vells: assume mean or stddev: use plot.type='realvsimag'
   - 1D vells: just plot staggered offset-plots ('spectra')
   - 2D vells: 2D plot with values as colors 
                 (e.g. Brentjens scheme for complex?)

In any case, the plot.type='standalone' does not seem to be very
useful. So let's ditch it.



      ------------------------------------
      visu.attrib.plot := [type='realvsimag']
      ------------------------------------

# visu.attrib.plot := [type='realvsimag', value_tag='mean', error_tag='stddev']
# visu.attrib.plot := [type='realvsimag', value_tag='mean']
# visu.attrib.plot := [type='realvsimag', circles=F]   (this is 'standalone')

# NB: Any attributes in a downstream (parent) dataCollect override the
  upstream ones (if relevant): e.g. attrib.plot.circles=F
 
# We need a list of valid attributes for each plot.type, and their
    default values. Note that we may keep in adding to this list as
    long as Tony's script recognises them. 

# Attributes for plot.type='realvsimag':
  - attrib.plot.symbol := 'dot' (default)  need list of allowed symbols
  - attrib.plot.symbol_size := 10 (default, pixels)
  - attrib.plot.mean_circle=T: dashed, centered on the origin, through the
    mean of visu.value.
  - attrib.plot.mean_arrow=T: from the origin to the mean of visu.value
  - attrib.plot.stddev_circle=T: dashed, centered on mean(visu.value)
  - 
  -
  -

# Axis labelling:
  - real
  - imag


      ------------------------------------
      visu.attrib.plot := [type='spectra']
      ------------------------------------

# vells arrays (e.g. spectra) from one or more children
# visu.attrib.plot := [type='staggered', ...]
# visu.attrib.plot := [type='image', ...]
# visu.attrib.plot := [type='surface', ...]
# visu.attrib.plot := [type='wire_frame', ...]

# NB: use separate node(s) to collapse the vells along
#     one or more axes. The dataCollect node does not
#     know anything about that, and just collects the
#     ND-vells from its children (which may be many)

# NB: AGW can figure out the axes info (time, freq) from
#     a global forest-state (OMS will provide)


# For the moment, we will concentrate on:

# visu.attrib.plot := [type='spectra', v_axis=-1]   implicit: h_axis='freq'
#   if v_axis='time', page through the children
#   if v_axis=-1, stack the children vertically
#   page through the remaining axes (e.g. time or children)

# Attributes for plot.type='spectra':
  - attrib.plot.line_style = 'solid' (default)
  -
  -
  -




      ------------------------------------
      remaining questions
      ------------------------------------

  -) what does a collect node do that combines two conflicting
   plot.types (e.g. realvsimag and spectra). I will NOT accept some
   unhelpful message that 'it cannot be done'.

  -) dataConcat nodes: what do they do?


==================================================================================

