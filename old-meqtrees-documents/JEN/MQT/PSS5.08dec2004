file: ../PSS/PSS5.08dec2004


      ====================================================
      Input for PSS5 meeting, wednesday 08 dec 2004, 15:00     <---!!
      ====================================================

Participants:
  - RXA: Rob Assendorp
  - GVD: Ger van Diepen
  - RJN: Ronald Nijboer 
  - JEN: Jan Noordam
  - TAO: Tom Oosterloo
  - OMS: Oleg Smirnov
  - AGW: Tony Willis

For information:
  - MAB: Michiel Brentjens
  - AGB: Ger de Bruyn
  - MVH: Michiel van Haarlem
  - HAH: Hanno Holties
  - KVS: Kjeld van der Schaaf
  - CMV: Marco de Vos



           Meeting schedule
	   ================

Wednesday 15:00, Multi-Media Room.

Please prepare by reading this thoroughly.


	   ===========
           New recruit
	   ===========

We get a new RSW colleague in the project. He/she will be full-time
PSS, stationed in Dwingeloo, and will concentrate on MeqParm issues
(MeqParm table tools, and the class itsef).

After Algemene Zaken have moved to a new portacabin in Q12005, there
will be more room for the PSS team in the main building in Dwingeloo.
I hope that we can get a few rooms close together.  


	   ===================================
	   A better name for the P[I]SS system
	   ===================================

I offer a bottle of Good Stuff for the winner of our new-name
competition. 

  - RXA: Jones Equation Nodes (JEN)               (rejected, of course)
  - RXA: Arbitrary Measurement Equation Nodes (AMEN)
  - RXA: Flexible Measurement Equation Solver (FlexMeqs)
  - RXA: Fleqs or Meqs
  - RXA: A logo, which my mailer could not reproduce.
  - RJN: SElfcal module for Solving Arbitrary M.E. (SESAME)
  - OMS: SecSy: Selfcal System 
  - GVD: FRAMES: Flexible Radio Astronomy M.E. Solver
  - GVD: FLAMES: idem, without radio
  - GVD: GAMES:  idem, with Generic i.s.o. Flexible

Anyone else? I want to change by January 1st 2005.



	   ===================
           Short-term emphasis
	   ===================

Three points:

    -) Robustness of the Kernel: Exercise, exercise, exercise...!
    NB: OMS will start a kernel bug/feature reporting system.

    -) Canned trees (without LSM, for the moment). See below.

    -) Water-hole. See below.


I want these three things to be in a workable state BEFORE the
Christmas holidays. This will allow me to generate and test most of
the canned forests for our focus program over Christmas, so that we
can start on real data (3c343) in the new year.



	   =============================
           Visualisation: Work-plan AGW:
	   =============================

Just before Tony left, we agreed on the following:

- Switch to Qwt (freeze Hippo development)
- Visualise the 80% polarized pulsar data from AGB
- Put it into the water hole, with scripts
- Make visualisation plan
  - MeqParm polcs, via browser 
  - Solver metrics
  - MS, via Master Sink?
  - new plot_types? apart from spectra and realvsimag
- Put LAR target into the work plan (hidden)

Tony has sent a demo. Let us try to run it at the videocon. 

JEN has also execised the current system of collect/concat nodes, and
has discussed his dissatisfaction with OMS. We agree that we cannot
really reconstruct how we arrived at the present system with item.nn
and group.xx fields, but it appears to be sub-optimal. We hereby
propose the following improved system:

  -) The MeqDataCollect and MeqDataConcat nodes still have a top_level
  field with a fixed name ('visu' or something) that Tony can
  recognise in his Python script. This field contains a LIST (a record
  in Glish terms) of items which I will loosely call plot-records
  here.

  -) Each plot-record has the following fields:
    
     -) values: This is a LIST, in which each item can be either a
     value, or another list, or even a list of lists.

     -) labels: A list that contains some sort of label for each item
     in the values list. It can be specified by the user, but sensible
     defaults will be generated if he does not. These labels can be
     used to identify each data-value, e.g. when clicking on a certain
     data-point in the plot.

     -) attrib: A list of plot-attributes like plot_type, color,
     style, label, nodename, etc. I suggest a system of required
     fields, for which sensible defaults are used if missing. In
     addition, the node creator must be able to attach any number of
     other fields with information. The field-names are NOT HIID's, so
     they can be anything at all.

  -) A MeqDataCollect node creates a list with a single plot-record.

  -) A MeqDataConcat node concatenates the lists from its children,
  which is any combination of collect and concat nodes. Thus, in
  principle, the concat node is really simple. (However, wa can make
  it more complicated later, to deal with the powerful hierarchical
  possibilities that were hinted at above. For the moment, I an happy
  with the basic structure).

  -) Note that a plot-record will usually contain a group of values,
  with instructions/hints how to plot them. However, a plot-record can
  also represent an arrow, or a circle, or whatever.

  -) Note that, if the values-field contains a list of plot-records,
  each of which has its own attrib field with plot-instructions, the
  overall attrib field contains overall plot instructions. Thus the
  system is truly hierarchical, and potentially very powerful.



OMS will make the necessary changes in the MeqDataCollect/Concat
classes, and tell us all what to change in our code to create them.
AGW should start thinking about the necessary changes in his Python
script. I want the whole thing to be working this week! Chop-chop!

NB: Tony, Oleg lays a strong emphasis on the existence in Python of
rather elegant tools to interrogate Python objects, and do the right
things depending what is in them....




           ================
           Water-hole (RXA)
           ================


RXA will unfold his plans, and will run some demos.


For reference: The following (evolving) repositories are needed:

   -) RXA: A range of (short) calibrator observations (various
   frequencies, some polarised)

      - e.g. 10406700_S0_T0  (3c147, 21cm, 30 min)

      - and a simular one for 3c286 (21cm): polarised


   -) TAO: Some suitable 'science' MS's (e.g. spectral line). These
   could be pre-flagged.

   -) JEN: A range of canned C++ forests, in files.

   -) RJN: LSM's for specific objects.

In a later stage, a GSM could be added to this system.




	   ===========================
           Predicting extended sources
	   ===========================


Until now, we have had two kinds of predict trees: Those connected to
individual Cat I sources via some sort of DFT, and those connected to
patches of Cat II sources via an FFT. 

  -) For the first kind, the values for each baseline are predicted by
  their own subtree, and we can easily solve for source parameters.
  In the case of point sources, it is trivial to apply
  position-dependent instrumental errors (image-plane effects) this
  way. In the case of extended sources it is more difficult.....

  -) For the second kind, all baselines interpolate their values from
  the same 4D gridded uv-cube, which is the FFT of a 4D patch image in
  which all the Cat II sources in a certain patch have been collected.
  It is a little more difficult (but certainly not impossible) to
  solve for source parameters this way (see the latest PSS/BBS
  meeting). Recent discussions with Sanjay Bhatnagar have suggested a
  way in which image-plane effects can be applied via the
  interpolation function, which would then be different for each
  baseline.

For the moment, we have only generated trees for predicting Cat I
point sources. It is entirely possible to generate such trees for
elliptic gaussians or other parametrized shapes, although we do not
know how to apply image-plane effects. Recently, I have started to
wonder whether it will not be easier (and more general) to predict all
extended sources via the FFT route.



	  =================
          Ionospheric model
	  =================

We have had some good discussions with the guys from Delft (Bas van
der Tol and Brian Jeffs) about the mathematical underpinnings of what
we are trying to do. I will elaborate later....



                    =====================================
                    =====================================






















