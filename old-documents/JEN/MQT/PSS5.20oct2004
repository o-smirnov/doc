file: ../MeqTrees/PSS5.20oct2004


      ====================================================
      Input for PSS5 meeting, wednesday 20 oct 2004, 15:00     <---!!
      ====================================================

Participants:
  - RXA: Rob Assendorp
  - MAB: Michiel Brentjens
  - GVD: Ger van Diepen
  - HAH: Hanno Holties
  - RJN: Ronald Nijboer 
  - JEN: Jan Noordam
  - TAO: Tom Oosterloo
  - OMS: Oleg Smirnov
  - AGW: Tony Willis



           Meeting schedule
	   ================

Wednesday 15:00, Multi-Media Room


           Videocom issues (AGW)
	   =====================

On the whole, it seems to work pretty well. What else do we need?

Screen views...



	   First LFFE image
	   ================

Ger de Bruyn has produced the first LFFE images. The ionosphere was
exceptionally quit. After nov 25, we will exercise PSS on these
fields.

   1) 3c295 (100 Jy) plus the usual smattering of sources from 5 Jy
   down, many of them 4C sources. In view of the sensitivity of the
   WSRT LFFE sysem, only 3c295 has enough flux to generate the SNR>3
   needed for a selfcal solution every time-slot (1-2 minutes). We
   should use PSS to attempt a solution for the shapes of the WSRT
   telescope beams every hour. The second-brightest source was clearly
   distorted due to an (as yet) unexplained WSRT problem that has
   appeared a few years ago (MFFE, or uv-coord?).

   2) Pulsar field. Intial phase/gain calibration was obtained from a
   calibrator source before (and after?). Since there was not enough
   flux per time-slot for a selfcal solution for individual telescope
   parameters, Ger reduced the number of independent parameters by
   solving for ionospheric phase gradients over the entire WSRT array
   (historically called 'aligning'). This worked quite well. The Q map
   nicely shows the clover-leaf pattern of instrumental polarisation,
   and the high intrinsic Faraday Rotation Measure (RM=61 rad/m2) of
   the pulsar causes a variation from poitive to negative Q over the
   25 channels of the 2 MHz frequency band.



           Focus-driven development
	   ========================

ALmost imperceptibly, we have drifted into a rather informal
focus-driven development mode. Each focus is designed to win us new
admirers, and self-propelled users. For each focus point, we identify
the features that we need for it, and try to make them work. Each new
focus requires a bigger subset of the system that we eventually hope
to have. Here is a first stab at the list of focii and features. Note
that it gets less complete as the fog of tehe future closes in.


   1) Nov 25 demos: WSRT data-inspection (see also below)

      -) Visualisation (AGW, JEN)

      -) Flagging (OMS, JEN)

      -) Point-source calibration trees (JEN)

      -) Graceful behaviour of solvers (GVD)

      -) Graceful behaviour of canned trees (OMS)

      -) MeqParm manual fiddling (AGW)

      -) Management of canned trees and scripts (RXA)

      -) Use of trees with (simulated) residual images (RJN)

      -) Re-tapering (OMS, RXA)

      -) Demonstrations (RXA, RJN)

      -) NB: Obviously, all this will test many aspects of the kernel,
      including its speed...


   2) 3cXYZ (double source, equal flux, on beam flanks)

      -) Peeling trees for 2 sources (JEN)

      -) MeqParm behaviour (OMS, JEN)   <---

      -) MeqParm visualisation (AGW)

      -) LSM update from residual images (RJN, JEN)


   3) First LFFE map (3c295): 100 Jy, 5 Jy, beamshape solution

      -) Cat II prediction (OMS, RJN)

      -) Solution for WSRT primary beamshapes (JEN)


   4) 3c84: extended structure

      -) Images of CLEAN components in LSM (RJN)

      -) Resampling (OMS)

   
   5) LFFE: ionosphere

      -) Phase tracking

      -) Growing domains

      -) Operational issues (RXA, AGW)





           Demos for 25 nov
           ================

The main thrust at the 2nd PSS open day will be in seeing trees in
action, presented as much as possible by 'users'. Since we are not
ready to do full-scale reduction, we will demonstrate a succession of
spigot2sink forests of increasing complexity for the WSRT
'data-inspection pipeline'. This is of course the uv-data processing
that was stupidly neglected by AIPS++. My hope is to get enough
enthousiam going that more WSRT resources will be poured in to
embellish things, while we concentrate on Cat II prediction and
MeqParms.

  1) no operation at all, just uv-data visualisation, especially a
  large variety of fixed views from MeqVisu nodes and MeqNodeGroup.

  2) flagging, including its visualisation and statistics.

  3) bandpass estimation (and correction) 

  3a) re-tapering (if it is ready by then, not a priority)

  4) gain and phase selfcal on a bright calibrator, i.e. without LSM.

  5) polarisation selfcal on a bright calibrator

  6) manual fiddling of the X/Y phase-zero difference, while solving.


           Creative Users
	   ==============

RJN will team up with RXA to become 'creative users', i.e. to exercise
the current system with meqsolve.g etc. This will be a great help for
OMS, in shaking ot the system. MAB and JEN will look over their
shoulders.


	   Generalisation of domain dimensions (OMS)
	   =========================================

The operation has been finished.... Ho do we test it?


           Visualisation (AGW)
	   ===================

There has been an intensive transatlantic discussion about
visualisation nodes. Tony will introduce the subject as it stands.


	   Residual images (RJN) 
	   =====================

RJN is setting up his own corner for developing tools for analysing
residual (facet) images, especially updating LSM sources. Should be
independent of uv-plane processing.

    -) Figure out whether it is possible to do Hogbom CLEAN with a
    dummy MS.

    -) Ask OMS for a MeqKernel system, and start playing with the
    simple trees that AGW used. 

    -) Get into a position where he can use JEN's LSM object. This
    requires checking in JEN's Glish modules into LOFAR system.

The problems with making images with AIPS++ have been solved.



           Failing gracefully
	   ==================

GVD: Solver...

We have vowed that the MeqKernel will always fail graciously, and will
never leave people in the lurch in the way AIPS++ so often does. OMS
will review the node reporting rules.

  

           Graceful behaviour of canned trees
	   ==================================

Ideally, an institutional user has a number of standard C++ forests in
files ('canned'), to be invoked to operate on different observations.
However, it may happen that certain telescopes/stations are not
available. There are two problems here:

  1) How should a spigot/sink react if it cannot find its ifr in the
  MS?

  2) How does the solver react when it is trying to solve for
  parameters of stations that are not there?





----------------------------------------------------------------------
Appendix:
----------------------------------------------------------------------


           Manual fiddling, while solving
           ==============================

I would like to be able to halt the system (at a breakpoint), and then
re-execute a selected node with its current request, while I manually
fiddle the value of one or more MeqParms. For the moment we can just
re-execute once, but in the future we should offer automatic
repeating, possibly with a time-delay each time.

I have a particular experiment in mind, where I solve for dipole angle
errors and ellipticities, while fiddling the WSRT X/Y phase zero
difference (PZD). I have a hunch that it might be possible to solve
for these parameters with an unpolarised source. Whether this hunch is
true or not, the demo will blow them away, and they will be braying
for more.

The obvious candidate node for re-execution is a solver, of course,
but there is no reason why we should not offer this for all nodes.
It should be trivial to implement: Just allow Node.Execute without a
request. This will generate an error if the node does not have a
current request in its state. 

It should be possible to control this from the browser, just like
halt/resume/breakpoint etc. (What is the status here?). While we are
at it, we might implement the option of a time-delay of up to a second
between successive requests from the sink. We also need a request
monitor, which visualises the progress through time/freq land. 

The MeqParm value fiddler is a first step towards a full-scale MeqParm
visualiser and control tool. We can only think about the latter after
we have a better idea about MeqParm operation. What we need for this
experiment is a little widget that pops up when you click on a MeqParm
node in the browser, and that gives access to its 'current polc',
i.e. the one that it has in memory. For the moment, it should be
sufficient to only fiddle the value of its c00 coefficient.

It should be possible to fiddle the value of any MeqParm, irrespective
of whether they are solvable or not! 




           Local Sky Model (LSM) (deferred from last time...)
	   =====================-----------------------------

While TAO is working on the WSRT GSM, JEN will implement a
place-holder LSM. It contains the following elements: 


    -) A list of parametrized sources. 

    -) A MeqParm (MEP?) table

    -) A number of internal organising (mapping) vectors:

       - Pointing to Cat I/II sources. The dividing line is flexible.
       Any Cat II source that causes trouble may be upgraded to Cat I.
       (NB: The reverse is not always true, since Cat I sources may
       lie outside the field-of-view).

       - Relation between Cat II sources and predict patches. This is
       used in collecting Cat II sources into a temporary image.

       - Relation between Cat I/II sources and facet images (which
       will be stored in separate image files). This is used in the
       RJN source update process.

       - 

    -) Predict trees per source: RA, DEC, StokesI,Q,U,V.....
    Point sources, extended sources, large sources

    -) Solve trees per source: the math relation between source
    parameters in the MeqParm table and (residual) image values.

    -) A collection of 4D images (with CLEAN components). (what about
    beam attenuation?)

    -) Temporary 4D images (CLEAN components) for Cat II prediction,
    and for use in the Cat II update loop. 




                      ==================================




























