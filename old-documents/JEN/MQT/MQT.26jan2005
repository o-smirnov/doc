file: ../PSS/MQT.26jan2005


      =============================================================
      Input for MeqTree (MQT) meeting, wednesday 26 jan 2005, 15:00   
      =============================================================

Participants:
  - RXA: Rob Assendorp
  - GVD: Ger van Diepen
  - MXM: Maaijke Mevius
  - RJN: Ronald Nijboer 
  - JEN: Jan Noordam
  - TAO: Tom Oosterloo
  - OMS: Oleg Smirnov
  - AGW: Tony Willis

For information:
  - MAB: Michiel Brentjens
  - WNB: Wim Brouw
  - AGB: Ger de Bruyn
  - MVH: Michiel van Haarlem
  - HAH: Hanno Holties
  - JXR: John Romein
  - KVS: Kjeld van der Schaaf
  - CMV: Marco de Vos



           Meeting schedule
	   ================

Wednesday 15:00, Multi-Media Room.

Please prepare by reading this thoroughly.



           ================
           Topics this week
	   ================

This week we are exercising the system, in the wake of Oleg's Grand
Overhaul of the DMI system, which underlies the MeqTree kernel. In
addition, Tony has arrived, for a final stay of 5 weeks. Next week,
Maaijke Mevius will arrive, and we hope that Wim will eventually get
involved. Since I neglected to submit a Quarterly Report to poor
Marco, it seems like a good moment to take stock of the current
status of the MeqTree project (note the name!) in the 'State of the
Union' section below. Unlike Dubya, I have not shirked the problems,
and I only mention the word 'Freedom' once. But like him, I imply a
glorious future, of course.

In the context of this glorious future, I think that I have stumbled
upon the germ of yet another breakthrough (after peeling) to improve
the end result while saving on processing cost. Because, as Ger loves
to point out in gruesome detail, it is still totally uclear whether we
(or anybody) will be able to handle the huge data volumes of LOFAR. In
that sense, we are a bit like James Bond: We are better equipped than
most, but ultimately we rely on inspiration along the way to save us,
and thus the world. Fortunately, this never fails to materialise, so
let us move forward with vigour and confidence. I will elaborate
below.





	   ==================
           State of the Union
	   ==================





	   ===================
           Short-term emphasis
	   ===================

Three points:

    -) Robustness of the Kernel: Exercise, exercise, exercise...!

    -) Canned trees (without LSM, for the moment). 

    -) Water-hole. 


I want these three things to be in a workable state BEFORE the
Christmas holidays. This will allow me to generate and test most of
the canned forests for our focus program over Christmas, so that we
can start on real data (3c343) in the new year.




           ==============================
	   3c343 LSM and AIPS++ reduction
	   ==============================

RJN will report.











































 
           =================
	   Math node classes
	   =================

RXA has produced some new math classes, and is reviewing the set off
standard kernel math classes we have, and which are still missing. I
propose that we name him Math Master. He will produce (and maintain) a
document with an overview of these classes and their properties, and a
manual for writing such classes.

NB: When producing MeqGaussNoise, we learnt (at least two lessons):

   1) By taking exp(gaussnoise) you can make spikes for flagging. So
   we do not need extra MeqSpike nodes. Lesson: A well-chosen useful
   class generates others. 

   2) It was good that Hippo is still around to visualise cache
   results.
 

  

           ================
           Water-hole (RXA)
           ================

JEN has produced a series of canned forests. RXA has produced some
Measurement Sets. We need a little Python(?) tool that allows a user
to select a forest and am MS (and in the future: a LSM), and start the
system. The tool should be VERY simple in the beginning, and can then
gradually become more sophisticated. How do we go about this? 


    	   ======================
           Solver and supersolver
	   ======================


Ger van Diepen and I had a discussion about solvers and
super-solvers. He will summarize this in a separate email.

Both these issues should find their way into Bugzilla, of course.




	   ===================
           Visualisation: AGW:
	   ===================

Tony is working on a consistent set of rules for the behaviour of his
plot-record extraction scheme. He will report, and hopefully give a
demonstration.


He will also define a set of colors and styles that his program will
recognise, and convert to the corresponding colors/styles of either
Qwt, HippoDraw, or whatever plotting program is appropriate. Perhaps
the PGPLOT set is a good start, but it could be a little richer than
that. Note that 'styles' covers point-styles (plus, cross, diamond
etc) as well as line-styles (solid, dashed, dotted). The specified
style thus determines whether a set of (x,y) coordinate-pairs is
plotted as a line connecting them, or as a set of individual points.


JEN: I will now develop a standard solver-unit, any number of which
can be plugged into the s2s tree. Each has two visualiser-units
attached to its input reqseq, one for watching the relevant condeqs,
and another one for visualising the values of the relevant meqparms.
The two visualisers are versions of a standard visualisation unit that
can be used to plug nuil-in views into any point of the tree.  All
solver-units and visualiser units are easily accessible from the top
of the browser, where they can be (de-)activated at will.


 





                    =====================================
                    =====================================






















