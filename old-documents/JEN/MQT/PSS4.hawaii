....lofar/MeqTree/PSS4.hawaii

============================================================================
Some powerpoint bullets to be presented ain Hawaii:
subject: "LOFAR calibration and calibratability"
          J.E. Noordam

      
   *) Station calibration using TV-signals (ITS)

      -) Solves the problem of LNA instability
         (no 'core-dipole' calibration needed)

      -) Uses a form of 'peeling'
       

   *) Prototype Selfcal System (PSS4):

      -) High density of innovation: slow progress
         - Semi-automatic tree generation
         - MeqParm nodes: polc management
         - MeqExpr nodes: complex but error-free C++ expressions
         - MeqSolver nodes: scope, flexibility, quality control
         - Problem-independent testing and monitoring
         - Rippling trees for efficient peeling
  
      -) To be exercised with WSRT 150 MHz LFFE's (end 2004)


   *) Interaction with international partners:

      -) Still hoping to use Haystack simulator data

      -) We miss you...


============================================================================



purpose:
 - impression OWN side

general:
 - progress slow: 
   - get things right (density of innovation)
   - hostage to PSS3 legacy

system overview: 
 - kernel (ASTRON): 
   - M.E. implementation 
   - M.E. paramater estimator
 - data handling (e.g. AIPS++ MS)
 - image-related operations (e.g. AIPS++)
   - facet imaging
   - updating of GSM from residual images (Cat II): use trees
   - finding (and deconvolving) Cat III sources
   - role of AIPS++
 - scripts (e.g. Glish or Python):
   - Tree definition and generation
   - processing recipes
   - monitoring and inspection tools
 - 
 - NOT a finished system delivered, just the kernel
 - policy barrier (LOFAR, WSRT, others, other fields)


highlights:

 - kernel: 
   - meqtree generation
     - unique node names: 
       - classname followed by qualifiers [][][] 
       - qualifiers can be parametrised: expand later 
       - define groups of nodes (e.g. solvable MeqParms)
     - modularity: cobbling together of subtrees (examples)
   - collection of official nodes (?)
     - MeqSpigot, MeqSink
     - MeqSolver, MeqCondeq, MeqConstraint
     - MeqParm, MeqReal2Complex
     - MeqAdd/Subtract/Multiply/Divide
     - MeqShiftPhaseCentre (DFT and ionosphere), MeqDFT
     - MeqWSum: weighted sum of its children
     - MeqFlagSubtract: hierarchical flagging (peeling)
     - MeqIntegrate: increase cells size
   - user-defined MeqExpr nodes:
     - expressions by symbolic math processor 
     - automatic conversion to C++ classes
   - solvers
     - definition: very limited (big battle)
       - accumulates equations, inverts matrix
     - solution quality monitoring (problem-independent): SVD
     - use of double derivatives
     - iterations: Levenberg-Marquardt
   - MeqParms
     - All are 2D functions (f,t): polynomials (ND?)
     - database (meptable) and objects
     - multiple instantiations (different solvers)
     - polc management (solvable etc)
     - growing domains (implicit iteration, convergence)
     - automatic domain size (higher order coeff)
     - associated MeqParms
   - monitoring, debugging and inspection 
     - each node can be accessed by name 
       - dynamic: publish/subscribe 
       - manual: when system is halted/paused
     - debugger functionality: pause/step/resume/
     - general tests of correctness (mirror trees)
     - tests of convergence (problem independent)
       - condeq values (measured - predicted)
       - chisq derivatives plot
   - kernel efficiency issues
     - local intelligence vs global control
     - self-optimising: cache-use, subtree replication, etc
     - paralellisation: possibilities and problems
       - functional: WSRT (8 bands x 12 hours -> 96 proc.nodes)
       - rippling trees
       - problem: verknooptheid
     - small chunks of data (total cache size): growing domains

 - peeling
   - phase shift (DFT and ionosphere)
   - instrumental parameters, associated with source
   - solving for Cat I source parameters 
   - contamination sources (weasel ways)
   - refraction and 'apparent' position: 2D screen, absolute?

 - GSM/LSM (VO, UCD's)
   - use of subtrees in GSM
   - extended sources (CAT I/II)
   - NEWSTAR models, Clean Components



pictures: 
 - kernel and environment
 - rippling tree (indicating subtrees)


