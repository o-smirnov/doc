file: ../MeqTrees/PSS4.10aug2004

News:

  -) Tony Willis

  -) RS recruits for PSS/WSRT/LFFE

  -) SKA software task force

  -) Ronald Nijboer (on holiday until 20 aug)

     - now an expert on AIPS++ CLEAN techniques

     - will interface with LSM (use MeqTrees to solve for source
     parameters?)

     - Not on the critical path for august

  -) Bug in Glish? (ref/val)
   



How that we have all returned from holidays, we should concentrate on
the following:

  -) Demonstrate PSS4 on the PSS3 HayStack data, and declare PSS4
  officially finished by the end of August.

     - Tree definition (JEN, Glish): 

       - .MeqSubTree files (one hierarchical defrec per file):

         - spigot2sink_xxx (peeling and 'classic')   in spigot2sink.g
             (modes: simulate, subtract, solve)   
         - predictVis_RR etc (all corrs)             in predictVis.g 
         - predictPeelVis_RR etc (all corrs)         in predictVis.g 
         - predictPeelSolVis_RR etc (all corrs)      in predictVis.g 
         - stokes_I/Q/U/V etc (point-like sources)   in MeqLSM.g
             (NEWSTAR parameters, UCD's)
         - shift/restorePhaseCentre                  in shiftPhaseCentre.g
         - etc

     - Temporary LSM (3 HAystack sources)

         - Just some .MeqSubTree files for point sources)

         - MeqParms automatically put int AIPS++ table


     - C++ MeqForest generation (JEN, OMS):

       - Parametrized subtrees [q={q}][s1={s1}][s2={s2}] etc

       - Suppress Glish event 'glut'


     - Indispensable MeqKernel nodes

       - MeqDFT (GVD, OMS)

       - other?


     - MeqForest operation:
 
       - Manipulate subsets of M.E. parameters

       - Pause/Resume


     - Inspection of the result: 

       - Solving convergence: MeqCondeqState.g

       - Extra options in OMS Python widget...



  -) Make a start with serious GSM-work, in preparation for the next
  stage (WSRT 3c84, 1:10.000.000). 

       - See the questions of the last PSS meeting. 

       - See also below (GSM images)




========================================================================
========================================================================


         Development of Oleg's Python widget(s)
	 ======================================

   -) This is the 'official' one, which is always available with the
   kernel, and is guaranteed to work always. It has limited
   functionality.

   -) NB: User's should be encouraged to develop their own!

   -) Allow plugin's for inspecting specific nodes (e.g. MeqParms)

   -) Get subsets of nodes by regex names

   -) 2D/3D plots of vells, possibly in a clipboard mosaic.

   -) Pictorial Tree Browser 

   -) Interrogate a node with a given domain/cells. Gui for specifying
   a request.




         GSM source models in the form of images 
	 =======================================

For the reduction of 3C84, we need to be able to deal with complex
extended sources. In addition, we would like to use calibrator models
in image form, as produced by GMRT/VLA. Both require that we implement
source models in the form of gridded images from the start. 

  -) FFT a source image, assuming that it is in the field centre.
  Store the result, and make it available to multiple meqnodes, each
  of which gets values for a its current (u,v,[w]) values (f,t).

  -) CLEAN a residual image, to obtain a source image model.

  -) Import source images from elsewhere (including NEWSTAR CLEAN
  components).

  -) Also: Collect parametrised models of (Cat II) sources within a
  given sky patch into an image, and predict.


                      ============================================
































======================================================================
======================================================================
======================================================================

In this meeting we should discuss the various things that have
happened in the last few weeks, and the things that should happen in
the next few weeks, while I am in Penticton. Our immediate goals are
to exercise PSS4 on the PSS3 experiments before the end of August, and
to demonstrate its power on WSRT data before the end of the year.


         DFT
         ===

Ger has made progress with the MeqDFT node, but notes that it will be
a very expensive operation to shift the phase centre of the uv-data
(at full resolution!) to the position of the various peeling sources.
         

	 MeqTree kernel (OMS)
	 ====================

Progress report.

         Python interface (OMS)
	 ======================

Progress report.

         Tree generation (JEN)
         =====================

Progress report.


         Analysis of residual images (RJN)
         =================================

Progress report.



              Global Sky Model (GSM)
	      ======================

Tom Oosterloo (TAO) has studied Oleg's GSM document, and implemented a
first version of a WSRT GSM, using the VLA 21cm NVSS survey catalog.
He realises that our ideas may have evolved somewhat in the meantime,
and is quite prepared to rewrite everything. However, thanks to this
execise he is in a much better position to discuss the various
concepts with us. I am vary pleased with this development, and suggest
that we prepare to make the next step together by the time he gets
back from his holidays around Aug 7th. This means first of all that we
should have a clear picture in our own minds of the GSM and its
interface with the MeqTree kernel.

The NVSS contains 180.000 VLA sources at a single frequency (~21cm).
Most of them are slightly extended, but I do not know exactly how that
is parametrized. I am also not sure whether U,Q,V are availble, but
there are no spectral index (SI) or intrinsic rotation measure (RM).
Therefore, the source parametrization differs from the NEWSTAR system,
which is a Good Thing because it forces us to keep things general.

Tom has put all sources into an AIPS++ table, using one row per
source(!). Note that this is quite different from our Measurement
Equation Parameter (MEP) table, which has zero or more rows for each
parameter, i.e. a separate row per polc (funk). 


The questions that we must address in this stage are the following:

  1) What is the relationship (and interface) between GSM, LSM and
  MEPtable?

     - The GSM may consist of multiple databases, with different
     structures. How do we talk to them. 

     - LSM is ordered subset of GSM (cone-search, flux-limits)?

     - LSM is not a MEPtable?
   

  2) It is important to realise that the GSM delivers I,Q,U,V values
  for a source AT THE FIELD CENTRE (l=0, m=0):

     - In the case of a point source, this means that the result is
     real (i.e. the imaginary part is zero). For non-symmetric
     sources, the result is complex (see below).

     - This is sufficient for a peeling source (both selfcal and
     subtract), since the phase-centre of the uv-data is shifted to
     its position.

     - To calculate the contribution of contaminating sources, the
     IQUV values have to be phase-shifted by exp(i*(ul+vm+wn)),
     where (l,m,n) is the position of the contaminating source
     relative to the peeling source in the phase centre (l=0, m=0).


  3) Storing hierarchical defrecs (for generating subtrees) in the GSM
  is a very powerful concept. However, there are a few questions:

     - How much does a GSM module need to know about these foreign
     defrecs that are inserted into them? 

     - The node specifications must obviously refer to existing
     classes, which may exist either in the kernel (e.g. MeqParm) or
     in the MeqTree system (e.g. jen_Stokes_I), or are part of a
     particular GSM module (e.g. gsm_WSRT_Stokes_I).

     - The generated nodes must have parametrized qualifiers like
     [q={q}] or [q={q}][s1={s1}][s2={s2}]. Specific values for the
     qualifiers are filled in at actual node generation.

     - Assuming that source parameters are UCDs, they should be
     converted to MeqParms named: <UCD_xyz>[q={q}].

     - Children outside the GSM module can be referred to by standard
     classnames: gvd_UVW[s1={s1}][s2={s2}]
 
     - Obviously, since many sources will share the same generic
     subtrees, the identical defrecs should not be stored separately
     with each source.


  4) How does the GSM deal with multiple funks per parameter?

  5) We must generate our own tentative set of UCDs, and get the
  accepted by the ayatollahs of the VO. For instance:

       - UCD_RA_J2000              # position of flux centre
       - UCD_DEC_J2000             # position of flux centre
       - UCD_Stokes_I              # peak value 
       - UCD_Stokes_Q
       - UCD_Stokes_U
       - UCD_Stokes_V
       - UCD_Spectral_Index        # I = UCD_Stokes_I * f^(-si)
       - UCD_Faraday_Rotation_Measure  
       - UCD_shape                 # e.g. elliptic gaussian
         - UCD_Long_Axis
         - UCD_Short_Axis
         - UCD_Position_Angle

  







       GSM: Extended Sources
       =====================
 

It would be nice if we could limit ourselves to the case of point
sources in this stage. However, we cannot afford to ignore the case of
extended sources entirely, because we should not take any decisions
that excludes them. Even the simplest WSRT observation will require
their use, especially if we wish to reach a dynamic range of a million
or more. There are two main issues here:

  a) If the source is so small that instrumental effects can be
  assumed to be constant over it, we 'only' have to integrate the
  product of the source shape I(l,m) and the cosine corrugation
  pattern defined by the baseline length and orientation:

      - real(I) = int(dl) int(dm) I(l,m) * cos(i(ul+vm+wn))
      - imag(I) = int(dl) int(dm) I(l,m) * sin(i(ul+vm+wn))

  Remember that we only need values for a source in the field centre,
  so its flux centre is at (l=0, m=0).  Therefore, for a source that
  is symmetric w.r.t. its flux centre, the result will be real.

  Separate integrations may be needed for I,Q,U,V:

      - real(Q) = int(dl) int(dm) Q(l,m) * cos(i(ul+vm+wn))
      - imag(V) = int(dl) int(dm) V(l,m) * sin(i(ul+vm+wn))
      - etc

  The extra complication over the case of a point source is that,
  somehow, (u,v,w) must be supplied to the subtree that is stored in
  the GSM. But this subtree does not need to know anything about
  instrumental effects, since they are applied to I,Q,U,V afterwards,
  just like the point source case.
  

  b) It gets (much) more complicated if the source is so large that
  instrumental effects can not be assumed to be constant over its
  extent. In principle, we just have to replace I(l,m) in the integral
  by I(l,m)*G(l,m). Unfortunately, this runs into all kinds of
  complications because G(l,m) will be different for the different
  polarisations. I propose that we leave this case for later, after we
  have some experience with case (a) above.


For the moment, we will limit ourselves to elliptic gaussians I(l,m),
but it should be straightforward to include other functions like
tophats, shapelets or pixons. After that, we should consider
non-analytical source representations like gridded images.
 

Finally: We suspect that dealing with functions like I(l,m) and G(l,m)
may propel us into generalising domains/cells/vells into N dimensions,
with arbitrary axes (but fixed units for the moment). These would also
be useful for inonospheric phase screens and station beamshapes. Oleg
is thinking about the ramifications, and we will decide at the
beginning of August.

 



                      =================================
