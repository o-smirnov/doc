From: Tony Willis <Tony.Willis@nrc-cnrc.gc.ca>
To: ped@drao.nrc.ca
cc: noordam@astron.nl
Subject: workplan for HIA / ASTRON
Date: Thu, 18 Nov 2004 07:00:17 -0800 (PST)


Hi Peter

I guess it has somehow slipped through the cracks, probably
through my own misunderstanding, but Harvey Butcher
is still waiting for a direct note from you supplying
him with the workplan giving a list of deliverables for the
HIA / ASTRON collaboration that I am presently involved with.

Here is the finalized version of the workplan that Jan Noordam
and I have agreed on. I think this is do-able over the
allocated six month time frame. The work plan has seven sections,
and after less than 3 months, parts 1, 2 and 3 are largely
done. The visualization techniques that I have been developing
for parts 1 and 3 should be adaptable to the visualization
requirements given in parts 4, 5 and 6.  The MeqTree beginners
manual that I am writing for the part 2 requirement has
example code and scripts which will also end up being supplied
to the 'water hole' (essentially a collection of well documented
examples of trees, nodes, measurement sets etc) concept mentioned
in part 6.

So I would appreciate your sending this along to Harvey
as soon as possible. If you have any concerns, please let me
know.

Thanks

Tony







======================================================================
Workplan for Tony Willis in the context of the ASTRON PSS project.
This covers the six months from 1 sept 2004 to 1 March 2005, of which
three periods for a total of 10 weeks will be spent in Dwingeloo.

Date: 18 nov 2004.  
Authors: J.E.Noordam, A.G.Willis



   1) Write array-plotter visualisation plugin for the MeqTree browser:
  
     a) Display in a browser panel (hippoDraw)              done (JEN)
  
     b) Display on a separate canvas (hippo)                done (JEN)
  
  

   2) Write the MeqTree beginners manual:
  
     a) First version (sept Open Day)                       done (JEN)
  
     b) Second version (25 Nov)
  
     c) Third version (15 Jan 2005)
  
     d) Fourth Version (15 Feb 2005)
  
     The 'MeqDummies' beginners manual will cover the following
     subjects:
  
        - Generating simple trees from standard node classes
  
        - Executing them, using a request (domain), and inspecting the
          result in various ways.
  
        - Solving for subsets of MeqParms
  
        - Various methods of writing custom node classes, including
          templates and other examples. Recipe for adding them to your
          local system.
  
        - Building the PSS system at random sites
  
        - Exchanging trees and scripts, with lots of examples, and lists
          of available stuff...

  
  
   3) Development of built-in views from 'visualisation nodes':

        a) Write some simple (but cascadable) C++ node classes for
        collecting and concatenating data for visualisation:
  
            -) For plotting uv-data points in the complex plane
  
            -) For plotting spectra

        b) Write a plugin for the browser that displays such data.

        c) Indicate ways to associate a particular data-point in a
        plot with its origin (low priority).


   4) Tools for dealing with MeqParm values (in AIPS++ tables):

        a) Tools for visualising values of (multiple polcs of) (groups
        of) MeqParms over a given domain.

        b) Tool for transferring calibrator gains/phases (etc) to the
        MeqParm table(s) of a science observation, to serve as initial
        values.

        c) Make a MeqParm table for calibrator source parameters
        (3c147, 3c286 etc)


   5) Tools for dealing with MeqParm nodes:

        a) First version of a MeqParm visualiser, which 'somehow'
        displays its complete state (especially when it is solvable).
        This is in addition to the kind of cache-visualisation that is
        available for every node.
 
        b) A first version of a MeqParm 'fiddler', to modify the
        value(s) of an individual MeqParm interactively. It should be
        activated from the browser.


   5) Help design and commision an operational environment to reduce
   calibrator observations (i.e. dominating point sources in the
   centre of the field).

        a) Exercise the 'water-hole' concept, and propose and develop
        tools for it.

        b) Develop a range of (example) processing scripts (in python
        or glish) for the entire loop of reducing observations. These
        scripts control existing ('canned') MeqForests, and processing
        modules that are assumed to exist.  The various processing
        steps could be:

           -) reducing calibrator observation(s)

           -) transferring calibration info to other MeqParm tables,
           to be used as initial values


        c) Develop a range of quality monitoring tools:

           -) the quality of the data at various stages of processing.

	   -) the convergence of the solution (condeq watcher)
 
           -) the quality of the solution (MeqSolver metrics)

           -) compile an overall quality report for the user, based on
           the above items.


   6) Indicate the road towards a full-fledged system to reduce
   arbitrary observations with a suitable LSM.


   7) Export the PSS system to Penticton, and develop a convenient way
   to exchange trees and scripts between two (or more) sites.
  

                        =================================

