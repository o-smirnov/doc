file: ../MeqTrees/PSS4.24nov2003



         Reminder of what we were trying to achieve last week
	 ====================================================


I got my meqRippleSubtract tree working, complete with dummy LSM. It
will now be easy to make a meqRippleSimulate.

  -) Check whether the various Meq classes exist. 
     - MeqFreq (unit?)
     - us,vs,ws
     - HA!

  -) Check the automatic making of MeqParms.

  -) Select a suitable MS (2D, not too large)
  
  -) Get the RA,DEC of the field centre, and code this into the LSM
  
  -) Make the us,vs,ws MeqParms

  -) Fill the DATA column of the MS with simulated data, using the
  dummy LSM. RequestSequence? Make a map of the result.

  -) Subtract the same LSM from it, and look at the result at various
  stages. This implies pausing/stepping, and getting (and displaying)
  the result from selected nodes. Make a map of the result.



         The actual status
	 =================

  -) I can now create nodes for the 'meqRippleSimulate' tree, which
  predicts uv-data for 3 sources, using three baselines (for the
  moment). 

  -) The U,V,W, coordinates are in test.mep, created by GVD's
  'uvwparm' routine. All the other MeqParms have un unspecified MEP
  table name (but seem to use the defaults that I specify).

  -) I execute the tree using .init(input=inputrec), which somehow
  uses information from the MS to generate a request-sequence. The
  details are utterly unclear to me (see also next point)!

  -) .getResult() only gives 1x1 MeqVells, whatever I specify. This
  may be correct for the Haystack times (?), but we know that there
  are 50 freq channels...

  -) The actual value returned by .meq('Get.Node.Result') is real and
  does not temotely resemble the (complex) Vells result value amidst
  the diarrhea of screen output.

  -) The predicted data are not yet written back into the MS, so that
  we cannot yet make a map. NB: I still need to add a last stage to
  the meqRipplePredict tree that shifts the phase centre back to the
  original position.

  -) I also have a meqRippleSubtract tree, which can be used on the
  simulated data (see above) as soon as the MeqSpigot works.

  -) I have a number of tools to inspect the workings of the tree. 

  -) In summary, we did not get as far with our little program as we
  hoped at the start of the last week. We are not yet in a position to
  start on solving.

  -) Things are going too slowly. 

  -) To make things worse I have to spend time on this stupid URSI
  article, which has to be delivered before 15 dec. Fortunately, it
does not have to be a definitive article (see also below).
  


         The tentative program as agreed with Marco and Kjeld
	 ====================================================

I have had a progress meeting with the above gentlemen, at which we
set the following targets:

  -) Before the end of the year we want te be able to repeat the PSS3
  experiments in PSS4, and compare the results. Obviously, we should
  also be able to do a few extra experiments on the side.

  -) We also want to get a first WSRT result, using peeling etc, even
  if we can only use models with point sources. We could use 3c84, but
  there are also some interesting cases (3c245?) with 2 or 3 bright
  sources in the field, which would clearly benefit from individual
  beams and peeling.

  -) The main deliverables for PSS5 (apart from streamlining of PSS4
  features) are extended sources (incl CLEAN components), and phase
  tracking (i.e. following very large, but smooth, phase excusrions).
  
  -) We have decided that we need to write an ASTRON article about our
  new calibration approach in the first half of next year. The entire
  PSS4 team will be authors, and also Ger de Bruyn.

  
         u,v,w, coordinates (again)
	 ==========================

  -) At the moment, we have a temporary, but working scheme with
  MeqParms (U,V,W[s={s}]) derived from (u,v,w) from the MS. When
  should we go over to MeqUs calculated from station positions?

  -) In the future, we must calculate the u,v,w, coordinates
  separately for each new phase centre.
     - MeqUs[s={s}]  ->  MeqUs[q={q}][s={s}]
     - MeqVs[s={s}]  ->  MeqVs[q={q}][s={s}]
     - MeqWs[s={s}]  ->  MeqWs[q={q}][s={s}]
  JEN has modified the relevant tree accordingly.
  
  -) Fortunately, we know the smallish number of phase-centres that we
  need, e.g. the positions of all peeling source. So we have to do it
  only once for each (RA,DEC) position.

  -) Convention: q=0 refers to a zero-flux 'source' at the
  field-centre, i.e. the phase-centre during observation. This may of
  course be time-variable...



         System issues
	 =============

  -) include 'MeqTreeBuilder.g' breaks Glish on lofar10 (stack parser
  exceeded!), but not on dop12 or dop23.  For the moment, we can work
  around it by creating MeqTree files on dop12 and copying them to
  lofar10. But it obviously needs to be fixed.





                               =================================
