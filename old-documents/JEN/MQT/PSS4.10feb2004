file: ../MeqTrees/PSS4.10feb2004

         Check-list
	 ==========

The past week, we have mainly worked on cleaning up things,
and getting some new features to work:

  -) publish/subscribe from Glish: OK

  -) double-derivatives: seems OK 

  -) hierarchical request identifier (hiid)         done

  -) I regard the MeqParm problem as 'solved in principle',
     (see description of last week), but the datails will
     come out during the exercising.

  -) MeqParm table lock (OMS/GVD)

  -) Tree building (JEN): I have streamlined my tree-building code,
  which is now much faster, but has some new bugs. Ongoing.




         General 
         =======

  -) GVD will keep the MeqSolver, and write specialised classes
        like MeqDFT and MeqUVW.


  -) The following is roughly in order of priority:
     - PSS3 emulation.
       - Larger trees.
     - Chained solvers (ripple-peeling).
     - Predicting extended sources.
     - Deriving secondary MeqParms (beamshape, ion.screen)
     - Predicting and subtracting Cat II sources.
     - WSRT M.E.
     - Processing strategies (scripts)
     - Closing the loop:
       - GSM/LSM organisation (VO interaction)
       - Residual imaging (facets)
       - Updating the GSM from residual images (trees also) 
     - Writing our article...

  -) If we want a Python interface to the kernel in september, we
  should start relatively soon, because it will take some time for
  errors to die down. However, we want someone from outside our group
  to be the main user (and tester!) of this interface. A desirable 
  first application would be a tree browser (Nijmegen...?)

  -) JEN will ask WNB about further options for the AIPS++ solver.
  (adding/subtracting matrices etc). 




                               =================================
