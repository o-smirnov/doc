file: ../MeqTrees/PSS4.20jan2004


         Phase Closure experiment
	 ========================

  -) The Phase Closure tree is under-determined without a constraint.
  
  -) With constraint (p2=0) and c00 only: works fine.

  -) Without constraint: Works, but all phases are 2 (i.s.o. 0).
  So: How does the system deal with undetermined systems exactly?

  -) With constraint, but with more polc coeff: works fine, for
  domains with enough cells (neq > nuk) NB: This proves the very
  imporant hypothesis that we can use our experience with traditional
  selfcal for solving for (more) polc coeff.



         Other issues
	 ============

  -) NB: I would have expected that a problem like multiple updates
  would be found by the implementer at the C++ level....

  -) In general, I want to avoid perverse couplings in the request. So
  updating MeqParms via a request for predict is wrong. We must
  develop a language for Job Descriptions...

  -) GVD: I still would like spid_index in the MeqSolver result.

  -) OMS has solved the 'first time bug'. 

  -) OMS has enactivated the tek8200 printer from lofar10

  -) GVD/MAB: Problems with PSS3 solution of inonspheric phase (source
  flux and position goes OK). MAB has found some problems in the
  hard-coded expressions, and will continue this week.

  -) The above point proves the necessity of automatically generated
  expressions. Any hard-coded improvements must be tested against
  them.

  -) MAB/JEN: Absolute or relative ionospheric phase? I.e. is phase
  tracking (and phase locking) necessary? Apparent position....

  -) After solving, the caches are empty. How can I follow what happens
  this way...? Subscribe, e.g. to condeq caches?



         Standard tests and demos
	 ========================

  -) Keep others informed. Best way of progress reporting.

  -) Keep team members fully involved.

  -) Reduce number of development iterations.

  -) Layered approach?


         Large trees
	 ===========

  - Time it takes to expand/create them (Glish/C++)

  - Will we run out of (Glish) memory?


         Trees to be made
	 ================

  -) Demo trees (polynomial etc)

  -) WSRT M.E.

  -) Chained solvers (rippling tree)

  -) Deriving and using secondary MeqParms





                               =================================
