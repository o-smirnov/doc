file: ../MeqTrees/PSS4.18may2004


         General
	 =======

I think that the Internal Selfcal Day (maonday 10 may) was rather
successful, for the following reasons:

  -) Oleg gave a masterful performance in explaining MeqTrees, which
  really caught people's imagination.
 
  -) The relationship and parallel development paths of PSS and BBS
  has been much clarified.

  -) The WSRT people are keen to start our joint project to deal with
  LFFE observations by the end of 2004.


Our next steps are the following:

  -) Define the end of PSS4. First of all this means two documents:
  one that describes the kernel (OMS, with contributions by GVD), and
  an outside view (JEN). WE should discuss whether we want to include
  some demo in this stage.

  -) Start with PSS5 (LFFE), together with the WSRT group. There will
  be a joint workpackage, based on the PSS5 block diagram, and managed
  by Hanno Holties. More details will probably emerge this week. As it
  looks now, the members of the PSS group will probably play the
  following roles:

     -) The three of us will continue to have PSS meetings every
     tuesday (10.30), independently of the WSRT/LFFE project meetings.

     -) JEN is writing a document describing PSS5. It will closely
     follow the existing block diagram.

     -) OMS will continue to be responsible for the Kernel, which will
     continue to be developed by the PSS team. In addition, OMS will be
     seconded for 30% to the WSRT group to get things running in their
     environment.

     -) GVD will keep his responsibilities for MeqSolver, MeqUVW and
     MeqDFT. In addition, he will be our connection with the BBS team.
     He is also the C++/AIPS++ mentor for Ronald Nijboer.

     -) JEN will offer his various Glish scripts (MeqTree generation,
     MeqTree control, node inspection) as examples to the WSRT team.
     But it is imperative that they should learn to become their own
     masters.




         MeqWsum (OMS) and MeqDFT (GVD)
	 ==============================

  -) We have decided that the contributions of the peeling source and
  zero or more contaminating sources will be added in a MeqWSum
  node. OMS will implement it. Children with zero weight will be
  ignored.
 

  -) In principle, contaminating sources will be predicted at the same
  low resolution as the peeling source. After all, their contributions
  do not need to be subtracted from the uv-data. Of course their
  visibility will be multiplied with a (DFT) sine-wave, with a period
  that is inversely proportional to the distance their distance to the
  phase centre. This means the following:

     -) It will have to be taken into account by integrating over the
     low-resolution cells.

     -) From then onwards, it would seem that we have to continue in
     the mode of integrated vells, instead of the value at the centre
     of the cell. Is that true?


  -) NB: The final predict of the peeling source before subtraction
  will be done at low resolution. Since the subtract is at full
  resolution, the upsampling needs to INTERPOLATE the low-res vells.
  It may be assumed that the visibility function is linear over a
  cell.


         Fringe Fitting (VLBI)
	 =====================

The ONLY package in the world that does VLBI fringe fitting is classic
AIPS (AIPS++ has decided not to implement it in the foreseeable
future). For this reason, VLBA (and EVN?) are revamping AIPS as their
main package. Just for the hell of it, I have done the exercise to see
what it would take for PSS to do fringe fitting.



         GSM/LSM (OMS)
	 =============

  -) In my opinion, the WSRT group should start its own GSM project,
  starting small, and VO compliant. As a reminder of what needs to be
  done, I include what we have written on this before.

  -) We should put outselves into a position to convert and use
  NEWSTAR source model (.MDL) files.

  -) AGB tells me that most of the sources for 3c84/300MHz are so
  extended that he uses CLEAN components. How are we going to deal
  with that? 

     -) Combine a group of CLEAN components into an extended
     Cat I component, and solve for its parameters?
 
     -) The Cat II prediction process: Combine all fainter components
     (CLEAN or otherwise) of a small region into a small map, anf FFT
     them together.
 
  -) In any case, most of the 3c84 sources are extended, while we can
  only deal with point sources. We should start thinking about trees
  that can handle slightly extended sources. Perhaps we can get away
  for the moment with the assumtion that the instrumental parameters
  are constant over the source.

  -) We will approach this in a step-wise fashion:

     -) OMS will convert MDL tables into Glish structure.

     -) OMS will convert the regular components into GSM/LSM
     components

     -) JEN will atempt to derive parametrised components from CLEAN
     components.

  -) Finding and updating GSM/LSM sources from residual maps has a
  lower priority for the moment. But 'closing the loop' remains an
  important goal.


         Python interface (OMS)
	 ======================

  -) If we want a Python interface to the kernel in september, we
  should start relatively soon, because it will take some time for
  errors to die down. However, we want someone from outside our group
  to be the main user (and tester!) of this interface. A desirable 
  first application would be a tree browser (Nijmegen...?)







----------------------------------------------------------------------------
----------------------------------------------------------------------------
----------------------------------------------------------------------------


  -) The following is roughly in order of priority:

     - PSS3 emulation.   (May)
       - Larger trees.

     - MeqDFT/MeqUVW (GVD)
     - MeqZeroSubtract/MeqIdentity (OMS)
     - MeqResampler (OMS)
     - MeqWSum (OMS)

     - MDL -> Glish (OMS)
     - CLEAN comp -> extended sources (JEN)
     - Predicting extended sources.
     - Deriving secondary MeqParms (beamshape, ion.screen)
     - Predicting and subtracting Cat II sources.
     - WSRT M.E.

     - Closing the loop:
       - GSM/LSM organisation (VO interaction)
       - Residual imaging (facets)
       - Updating the GSM from residual images (trees also) 
     - Writing our article...






                               =================================
