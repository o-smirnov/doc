file: ../PSS/MQT.18may2005


      ==============================================================
      Input for MeqTree (MQT) meeting,  wednesday 18 may 2005, 15:30  
      ==============================================================

Participants:
  - RXA: Rob Assendorp
  - GVD: Ger van Diepen
  - MXM: Maaijke Mevius
  - RJN: Ronald Nijboer 
  - JEN: Jan Noordam
  - TAO: Tom Oosterloo
  - OMS: Oleg Smirnov
  - AGW: Tony Willis

For information:
  - MAB: Michiel Brentjens
  - WNB: Wim Brouw
  - AGB: Ger de Bruyn
  - MVH: Michiel van Haarlem
  - HAH: Hanno Holties
  - JXR: John Romein
  - KVS: Kjeld van der Schaaf
  - CMV: Marco de Vos



           Meeting schedule
	   ================

Wednesday 15:00, Multi-Media Room.

Please prepare by reading this thoroughly.



           ================
           Topics this week
	   ================

 -) Continuing our preparation for our splash at the next LOFAR
 Calibration Day, on tuesday 31 May 2005 (less than 2 weeks!).

    -) 343 (MAB)

    -) CPS (JEN)

 -) New browser features (OMS)

    -) Association of MAB uv-data visualiser (eventually)

 -) Stream control (RXA)

 -) Wiki node-list (RXA)

 -) Proto-LSM  with WSRT calibrator sources (RJN/MXM/JEN)

 -) uv-brick status (RJN)

 -) LAR (AGW)

 -) Speed... 



        ======================
	Status of the uv-brick
	======================

uv-bricks are needed for the prediction of the visibility function of
the flux in a (smallish) image patch, which may contain extended
sources. It is expected that uv-bricks will also be useful for other
applications, like solving for the parameters of extended sources, or
using (weak) redundancy, or filtering out contaminating sources.

A uv-brick is a 3D cube of gridded uv-data, calculated by FFT'ing a
gridded patch image. Since the requirement is that the visibility
function must be approximately linear between grid-points, the input
image is 10 times larger than the patch, and padded with zeroes. Thus,
a 100x100 pixel patch leads to a 1000x1000 uv-plane. The 3rd dimension
is frequency.

A single uv-brick node is the child of source predict nodes for all
baselines, each of which obtains values for the cells of a requested
(f,t) domain from a different part of the brick. It is assumed that
the uv-brick has as many uv-planes as there are cells in the frequency
direction of the domain.

RJN now has various schemes for calculating the visibility at an
arbitrary uv-point by interpolating the uv-grid points. The schemes
have different accuracy, traded against cost in processing and memory
use. Comparison with the results of the existing DFT node gives
differences between 1% and 0.001%, depending on the scheme. Note that
this is also a test of the DFT node.

For the moment, we will assume that domain cells are so small that
they will on average contain less than one uv-brick grid point. This
means that we can assume that the visibility function due to the patch
image is linear over the cell, so it is sufficient to calculate the
visibility value for the centre of a cell. This value is then equal to
the integrated (but normalised) visibility over the cell.
	
In the future, interpolation will be optimised (i.e. dynamically
tailored to the required accuracy). In addition, the application of
image-plane effects will be included.

RJN will clean up the uvbrick node, and make it available for use in
trees. He will write documentation and start work on LSM's again.


	===============
        The 343 project
	===============

Things are going reasonably well, but too slowly. MAB will devote more
time to the project for a few weeks.

MAB has revamped his stand-alone uv-data visualiser tool. It would be
nice if we could offer this from the browser (our User Interface),
with its (Qwt) display in a browser panel.

The memory leak has been plugged....

Node overhead is a real problem, which has to be addressed.



	===============
        The CPS project
	===============


The CPS project limits itself to Central Point Sources (CPS) because
they do not require the complexity of an LSM or peeling, while still
being potentially interesting for WSRT operations (provided they offer
functionality that is better or more convenient than existing). 

An OPERATIONAL set of canned CPS trees for reduction of WSRT
calibrator observations must have the following features:

  1) Stream control tool (RXA): This allows the user to select a tree,
  and associate it with a MS. It also allows the modification of the
  sensible defaults of a few parameters like (freq,time) tile-size,
  ifr selection (TaQL), MS columns to be used for I/O, etc. 

      a) The stream control tool should also allow the user to specify
      what to do with the results. E.g. make a map of the residual
      uv-data, or display the estimated MeqParm values.... 

      b) OMS has smoothed the path for RXA by providing some templates
      to work on.

  2) Bookmarks (OMS) in the forest state record, which define the
  placement of the state of various nodes on one or more browser
  pages. This saves a lot of clicking, and considerably lowers the
  threshold.

  3) MeqParm fiddler (MXM). This is being polished into a remarkably
  useful tool.

  4) A set of canned trees (JEN) for the various sources, for various
  operations. There will be trees to do these operations separately,
  but also trees where these operations are cascaded. JEN is busily
  rewriting to accomodate tensor nodes, which are thoroughly tested in
  the process. The following operations can be distinguished:

     -) Predefined source models for 10-20 popular calibrator sources.
     They should have frequency-dependent S.I. so that they are valid
     for all WSRT frequencies (RJN).

        a) We discussed various ways how the same tree might be used
        with different calibrator sources. The parameters of the
        latter would be in a table (a step towards a LSM).

     -) Simple flagging (with equalisation over all 4 corrs).

        a) AIPS++ has the possibility (built by OMS) to give a summary
        of all the flags....

     -) Visual inspection (using the browser/fiddler).

     -) Bandpass calibration.

        a) Is it possible to specify the central part of the band in
        the forest state record? This is useful for trees that are
        specially for bandpass calibration. How are these bandpass
        parameter values transferred to other trees?

     -) Tsys application (requires obtaining info from MS)

        a) At this moment, the trees automatically reads the telescope
        positions from the MS, using the OMS Python script. This
        works, but must be fully tested. To read Tsys info, a special
        bit of C++ must be written, and another Python script. How
        important is this?

     -) Solving for phase/gain

     -) Solving for dang, dell, PZD, Faraday rotation (RM). This is
     where we can really provide some value. The ideal is to provide a
     single tree for doing the entire WSRT calibration in one pass, on
     a SINGLE calibrator source. 

     -) Subtraction of the CPS calibrator source

     -) Correction of the (residual) uv-data

     -) Inspection of the result(s).

  4) Some tools for inspecting (summaries of) the estimated MeqParm
  values, and to dispose of them (MXM). Astronomers like to look at
  plots as a function of time and freq. RXA will show MXM some PLUVO
  plots, as an example of what will be needed in the future.

  5) Supporting documents. I am thinking about an explanation of
  polarisation calibration (i.e. what the plots mean). MAB could do
  the same for the 343 project. We should also put stuff on our wiki
  page.









                    =====================================
                    =====================================






















